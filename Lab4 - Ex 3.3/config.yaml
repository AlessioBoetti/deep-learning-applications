#### Weight & Biases settings

wandb:
  name: "Target Adv - CNN - 9 Conv Layers"
  resume: False
  job_type: "Adv"
  group: "Exercise 3.1"
  project: "University - DLA - Lab 4"
  tags: 
  - "CNN"
  - "ResNet"
  - "Adv"
  - "Target"
  notes: "Targeted adversarial training."


#### Experiment settings

config:
  # Machine
  seed: 1
  device: "cuda:0"
  cuda_benchmark: True
  deterministic: True

  # Paths and dirs
  data_dir: "../data"
  results_dir: "results"
  log_file: "log.txt"
  # hf_cache_dir: "../hf"

  model_type: "CNN"
  model:
    in_channels: 1
    depth: 9
    output_size: 10
    want_shortcut: False
    activation: "ReLU"
    fc_activation: "ReLU"
    pool_type: "maxpool"

  criterion: "CrossEntropyLoss"

  dataset:
    dataset_type: "Vision"
    dataset_name: "MNIST"
    val_size: 0.2
    val_shuffle: True
    normalize: True
    augment: False
    use_sampler: True
  
  dataloader:
    num_workers: 8
    batch_size: 256
    pin_memory: True
    persistent_workers: True

  optimizer_name: "AdamW"  # Lion, Adam, SGD, Adamax, Adadelta, RMSProp ecc. (https://pytorch.org/docs/stable/optim.html)
  optimizer:
    lr: 0.00005
    weight_decay: 0.01
    amsgrad: True
  
  scheduler_name: "OneCycleLR"  # MultiStepLR
  scheduler: 
    max_lr: 0.0001
  
  pretrain: False
  pretest: False
  train: False
  test: True
  test_original: True
  test_adversarial: True
  test_ood: True

  training:
    n_epochs: 150
    eval_interval: 1
    checkpoint_every: 1
    clip_grads: False
    patience: 20


  # Goals
  problem: "OOD"
  ood_dataset:
    dataset_type: "Vision"
    dataset_name: "FashionMNIST"
    val_size: 0.2
    val_shuffle: True
    normalize: True
    augment: False
    use_sampler: True
  
  postprocess: ["ODINPostprocessor"]
  odin_gridsearch: True

  cea_postprocess: ["MaxLogitsPostprocessor", "MaxSoftmaxPostprocessor", "ODINPostprocessor"]
  cea_odin_gridsearch: True
  cea:
    percentile_top: 99
    addition_coef: 1
  
  adversarial:
    epsilon: 8
    alpha: 10
    normalize: True
    target: 0
    target_type: "OVR"
  adversarial_add: True
  show_adv_imgs: True

  xai: False
  explain_gradients: False
  explain_cam: False